import java.util.ArrayList;
import java.util.Calendar;

/**
 * Created by A on 31.10.2017.
 */
public class GadgetGroup extends Gadgets {
    final static int DAYS_OFFSET = 1; //—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ 11.10.17
    ArrayList<ArrayList<String>> gadgets;
    String country;
    int xmlDay;
    String dateBeginRight;
    int cityId;
    boolean isNoDate;
    int id;
    public static final Calendar CALENDAR_ZERO;
    public static final int DAY_NUM_GLOBAL;

    static {
        CALENDAR_ZERO = Calendar.getInstance();
        CALENDAR_ZERO.set(Calendar.YEAR, 2017);
        CALENDAR_ZERO.set(Calendar.MONTH, 8);//september
        CALENDAR_ZERO.set(Calendar.DAY_OF_MONTH, 15);
        setCalendarToZero(CALENDAR_ZERO);
        Calendar calendar = Calendar.getInstance();
        setCalendarToZero(calendar);
        DAY_NUM_GLOBAL = (int) ((calendar.getTimeInMillis() - CALENDAR_ZERO.getTimeInMillis())
                / 1000 / 3600 / 24) + 1;
    }

    private static void setCalendarToZero(Calendar calendar) {
        calendar.set(Calendar.HOUR_OF_DAY, 0);
        calendar.set(Calendar.MINUTE, 0);
        calendar.set(Calendar.SECOND, 0);
        calendar.set(Calendar.MILLISECOND, 0);
    }

    public GadgetGroup(String country) {
        this.country = country;
        gadgets = new ArrayList<>();
    }

    private String getVendor() {
        return gadgets.get(0).get(Gadgets.mapGadgetAttributeNumber.get(Gadgets.VENDOR));
    }

    private String getIdXML() {
        return cityId + getVendor() + id;
    }

    private String getAdTitle() {
        return "–û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –°–º–∞—Ä—Ç—Ñ–æ–Ω—ã " + GadgetConst.MAP_VENDOR_TITLE.get(getVendor()) + " (" + country + ")";
    }

    private String getAdPrice() {
        return GadgetConst.MAP_VENDOR_PRICE.get(getVendor()) + "";
    }

    public String getXmlAd() {
//        System.out.println("check:" + isInitial);
        String ad = "\t<Ad>\n";
        ad += "\t\t<Id>" + getIdXML() + "</Id>\n";
        if (!isNoDate) {
            Calendar calendarZero = (Calendar) CALENDAR_ZERO.clone();
            int dayNumCurrentMonth = (DAY_NUM_GLOBAL - 1) % 30 + 1;
            calendarZero.add(Calendar.DAY_OF_MONTH, DAY_NUM_GLOBAL - dayNumCurrentMonth - 1 + xmlDay);
            if (dayNumCurrentMonth <= DAYS_OFFSET) {
                if (xmlDay > dayNumCurrentMonth + 30 - DAYS_OFFSET) {
                    calendarZero.add(Calendar.DAY_OF_MONTH, -30);
                }
            } else {
                if (xmlDay <= dayNumCurrentMonth - DAYS_OFFSET) {
                    calendarZero.add(Calendar.DAY_OF_MONTH, 30);
                }
            }
            String dateBeginLeft = getDateByCalendar(calendarZero);
            ad += "\t\t<DateBegin>" + dateBeginLeft + dateBeginRight + "</DateBegin>\n";
        }
        ad += "\t\t<AllowEmail>–ù–µ—Ç</AllowEmail>\n";
        ad += "\t\t<ManagerName>–û–ø–µ—Ä–∞—Ç–æ—Ä-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç</ManagerName>\n";
        ad += "\t\t<ContactPhone>" + GadgetConst.CITIES_PHONE_NUMBERS[cityId] + "</ContactPhone>\n";
        if (cityId == 0) {
            ad += "\t\t<Region>" + GadgetConst.CITIES[cityId] + "</Region>\n";
        } else {
            ad += "\t\t<Region>–¢–∞—Ç–∞—Ä—Å—Ç–∞–Ω</Region>\n";
            ad += "\t\t<City>" + GadgetConst.CITIES[cityId] + "</City>\n";
        }
        ad += "\t\t<Category>–¢–µ–ª–µ—Ñ–æ–Ω—ã</Category>\n";
        String goodsType = getVendor();
        if (goodsType.equals("Apple")) {
            goodsType = "iPhone";
        }
        ad += "\t\t<GoodsType>" + goodsType + "</GoodsType>\n";
        ad += "\t\t<Title>" + getAdTitle() + "</Title>\n";
        ad += "\t\t<Description>" + getAdText() + "</Description>\n";
        ad += "\t\t<Price>" + getAdPrice() + "</Price>\n";
//        ad += "\t\t<Images>\n";
//        ad += "\t\t\t<Image url=\"" + getImageAvitoUrl(gadget) + "\"/>\n";
//        ad += "\t\t</Images>\n";
        ad += "\t</Ad>\n";
        return ad;
    }

    private String getAdText() {
        String text = "<![CDATA[";
        text += "<p>–£–≤–∞–∂–∞–µ–º—ã–π –ø–æ–∫—É–ø–∞—Ç–µ–ª—å,<br>" +
                "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ iSPARK\uD83D\uDD25";
        text += "</p><p>\uD83D\uDCA3–ê–∫—Ü–∏—è! –ú–µ–≥–∞-–†–û–ó–´–ì–†–´–®, –ø–æ–¥–∞—Ä–∫–∏ –ø–æ–ª—É—á–∞—Ç –í–°–ï —É—á–∞—Å—Ç–Ω–∏–∫–∏ –∫–æ–Ω–∫—É—Ä—Å–∞ (–ø–æ–¥—Ä–æ–±–Ω–µ–µ –Ω–∞ —Å–∞–π—Ç–µ)‚ùó</p>";
        text += "<p>\uD83D\uDC9B–ú—ã –≤—Å–µ–≥–¥–∞ –∏–¥–µ–º –Ω–∞–≤—Å—Ç—Ä–µ—á—É –Ω–∞—à–∏–º –ø–æ–∫—É–ø–∞—Ç–µ–ª—è–º.<br>" +
                "\uD83D\uDC49–ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤–∞–º:<br>" +
                "\uD83D\uDD39 –¢–†–ï–ô–î-–ò–ù, –û–ë–ú–ï–ù —Å—Ç–∞—Ä–æ–≥–æ —Ç–µ–ª–µ—Ñ–æ–Ω–∞<br>" +
                "\uD83D\uDD39 –û–ü–õ–ê–¢–ê –∫—Ä–µ–¥–∏—Ç–Ω–æ–π/–¥–µ–±–µ—Ç–æ–≤–æ–π –ö–ê–†–¢–û–ô<br>" +
                "\uD83D\uDD39 –û–ü–¢, –û–ü–õ–ê–¢–ê –ß–ï–†–ï–ó –†/–° (–Ω–¥—Å, –±–µ–∑ –Ω–¥—Å)<br>" +
                "\uD83D\uDD39 –°–†–û–ß–ù–ê–Ø –î–û–°–¢–ê–í–ö–ê –≤ —Ç–µ—á–µ–Ω–∏–µ –¥–Ω—è<br>" +
                "\uD83D\uDD39 –°–ê–ú–û–í–´–í–û–ó –∏–∑ —Ä–æ–∑–Ω–∏—á–Ω–æ–π —Ç–æ—á–∫–∏ –ø—Ä–æ–¥–∞–∂<br>" +
                "\uD83D\uDD39 –ö–†–ï–î–ò–¢ –æ—Ç –û–¢–ü –ë–∞–Ω–∫/–•–æ—É–º-–ö—Ä–µ–¥–∏—Ç<br>" +
                "\uD83D\uDD1D–ú—ã –∑–∞–Ω–∏–º–∞–µ–º—Å—è –ø—Ä–æ–¥–∞–∂–µ–π –∏ —Ä–µ–º–æ–Ω—Ç–æ–º —Ü–∏—Ñ—Ä–æ–≤–æ–π —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∏ –±–æ–ª–µ–µ 5 –ª–µ—Ç.</p>";
        text += "<p>–í –Ω–∞—à–µ–º –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–µ —Ç–æ–ª—å–∫–æ üíØ–æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ ";
        text += GadgetConst.MAP_VENDOR_OFFER.get(getVendor());
        text += " –≤—Å–µ—Ö –º–æ–¥–µ–ª–µ–π, —Ü–≤–µ—Ç–æ–≤ –∏ –æ–±—ä–µ–º–æ–≤ –ø–∞–º—è—Ç–∏!\uD83D\uDE0A</p><p>";
        for (ArrayList<String> gadget : gadgets) {
            text += getOffer(gadget, cityId);
        }
        String quality = gadgets.get(0).get(mapGadgetAttributeNumber.get(QUALITY));
        text += "-–∫–∞–∂–¥—ã–π –∞–ø–ø–∞—Ä–∞—Ç " + GadgetConst.MAP_QUALITY_DESCRIPTION.get(quality);
        text += ", –≤–µ—Ä—Å–∏—è/–ø—Ä–æ—à–∏–≤–∫–∞ " + country;
        text += "</p><p>‚úî –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä—É—Å–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω—ã, —Ä–∞–±–æ—Ç–∞—é—Ç —Å —Å–∏–º-–∫–∞—Ä—Ç–∞–º–∏ –ª—é–±—ã—Ö –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤<br>";
        text += "‚úî –≤—ã–¥–∞–µ–º –¥–æ–∫—É–º–µ–Ω—Ç—ã –æ –≤–∞—à–µ–π –ø–æ–∫—É–ø–∫–µ: —Ç–æ–≤–∞—Ä–Ω—ã–π —á–µ–∫ –∏ –≥–∞—Ä–∞–Ω—Ç–∏–π–Ω—ã–π —Ç–∞–ª–æ–Ω<br>";
        text += "‚úî –≤ –∏–¥–µ–∞–ª—å–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏, –±–µ–∑ —Å–ª–µ–¥–æ–≤ —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏–∏, –ø–æ–¥–æ–π–¥—É—Ç –∫–∞–∫ –ø–æ–¥–∞—Ä–æ–∫<br>";
        text += "‚úî –ø–µ—Ä–µ–¥ –≤–∏–∑–∏—Ç–æ–º –≤ –º–∞–≥–∞–∑–∏–Ω, –ø—Ä–æ—Å–∏–º —É—Ç–æ—á–Ω—è—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω–æ–µ –Ω–∞–ª–∏—á–∏–µ —Ç–æ–≤–∞—Ä–∞</p>";
        text += "<p>–ù–∞—à–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ\uD83C\uDF0D<br>" +
                "‚ñ∂ –≥. –ú–æ—Å–∫–≤–∞, —É–ª. –°—É—â—ë–≤—Å–∫–∏–π –í–∞–ª, –¥. 5—Å1, –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã (–ø–Ω-–≤—Å): 11.00-21.00<br>" +
                "‚ñ∂ –≥. –ú–æ—Å–∫–≤–∞, —É–ª. –ë–∞–≥—Ä–∞—Ç–∏–æ–Ω–æ–≤—Å–∫–∏–π –ø—Ä-–¥, –¥. 7, –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã (–ø–Ω-–≤—Å): 11.00-20.30<br>" +
                "‚ñ∂ –≥. –ö–∞–∑–∞–Ω—å, —É–ª. –õ—É—à–Ω–∏–∫–æ–≤–∞, –¥. 8, –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã (–ø–Ω-—Å–±): 11.00-20.30</p>";
        text += "<p>\uD83D\uDCDE –ó–≤–æ–Ω–∏—Ç–µ: 9:00-21:00, –µ–∂–µ–¥–Ω–µ–≤–Ω–æ</p>" +
                "<p>–£ –Ω–∞—Å –≤—ã —Å–º–æ–∂–µ—Ç–µ –≤—ã–≥–æ–¥–Ω–æ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –ª—é–±–æ–π –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å –≥–∞–¥–∂–µ—Ç –∏–ª–∏ –∞–∫—Å–µ—Å—Å—É–∞—Ä!" +
                "\uD83D\uDC4D<br>" +
                "iSPARK\uD83D\uDD25";
        text += "</p>]]>";
        return text;
    }

    private String getDateByCalendar(Calendar calendar) {
        return calendar.get(Calendar.YEAR) + "-" +
                convertToTwoDigit(calendar.get(Calendar.MONTH) + 1) + "-" +
                convertToTwoDigit(calendar.get(Calendar.DAY_OF_MONTH));
    }

    private String convertToTwoDigit(int num) {
        if (num < 10) {
            return "0" + num;
        }
        return "" + num;
    }

    private String getOffer(ArrayList<String> gadget, int cityId) {
        String offer = "‚û° ";
        offer += String.join(" ", gadget.subList(mapGadgetAttributeNumber.get(VENDOR),
                mapGadgetAttributeNumber.get(COLOR) + 1));
        if (getVendor().equals("Apple")) {
            offer += " TouchID —Ä–∞–±–æ—Ç–∞–µ—Ç ";
        }
        offer += " = " + getPriceByCity(gadget, cityId) + "\u20BD<br>";
//        String quality = gadget.get(mapGadgetAttributeNumber.get(QUALITY));
//        if (cityId == 0 || quality.equals(GadgetConst.CPO)) {
//            if (quality.equals(GadgetConst.CPO)) {
//        offer += " (" + GadgetConst.MAP_QUALITY_DESCRIPTION.get(quality) + ")";
//            }
//        }
//        offer += "<br>= " + getPrice(getGadgetName(gadget), REGIONS_PRICE) + "\u20BD –æ—Ç 3 —à—Ç, = " +
//                getMinOptPriceAmoled(gadget) + "\u20BD –æ—Ç 10—à—Ç \uD83D\uDCA3</p>";
//        offer += "–≤—ã—Å—ã–ª–∞–µ–º –ø–æ –∑–∞–ø—Ä–æ—Å—É –ø–æ–ª–Ω—ã–π –æ–ø—Ç–æ–≤—ã–π –ø—Ä–∞–π—Å-–ª–∏—Å—Ç\uD83D\uDCA3";
        return offer;
    }

    private String getPriceByCity(ArrayList<String> gadget, int cityId) {
        return getPrice(gadget, priceAttributeNames[cityId + 1]);
    }
}
